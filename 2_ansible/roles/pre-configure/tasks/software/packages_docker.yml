---
- name: Software | Docker | Install package Arch, Fedora
  ansible.builtin.package:
    name: docker
    state: latest
  when: ansible_distribution in ["Archlinux", "Fedora"]

- name: Software | Docker | Install package Debian/Ubuntu
  ansible.builtin.shell: |
    curl https://get.docker.com | bash
  args:
    creates: /usr/bin/docker
  when: ansible_distribution in ["Debian", "Ubuntu"]

- name: Software | Docker | Check for podman package Rocky
  ansible.builtin.command: which podman
  register: check_podman
  changed_when: false
  failed_when: false
  when: ansible_distribution == "Rocky"

- name: Software | Docker | Remove old packages Rocky
  ansible.builtin.shell: |
    dnf remove -y docker \
                  docker-client \
                  docker-client-latest \
                  docker-common \
                  docker-latest \
                  docker-latest-logrotate \
                  docker-logrotate \
                  docker-engine \
                  podman runc
  when: ansible_distribution == "Rocky" and check_podman.rc == 0

- name: Software | Docker | Install packages Rocky
  ansible.builtin.shell: |
    dnf install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin
  when: ansible_distribution == "Rocky" and check_podman.rc == 0

- name: Software | Docker | Create group
  ansible.builtin.group:
    name: docker
    state: present

- name: Software | Docker | Add user to group
  ansible.builtin.user:
    name: "{{ custom_user }}"
    groups: docker
    append: yes

- name: Software | Docker | Reconnect to server session
  ansible.builtin.meta: reset_connection

- name: Software | Docker Compose | Install package
  ansible.builtin.package:
    name:
      - "{{ docker_compose }}"

- name: Software | Docker | Start docker service
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true
