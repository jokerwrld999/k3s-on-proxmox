---
- name: Pre-run | Status | Set timer
  tags: always
  hosts: all
  become: true
  pre_tasks:
    - name: Status | Start time
      ansible.builtin.set_fact:
        start_time: "{{ ansible_date_time.iso8601[:19] }}"

# - name: Pre-run | Wait 300 seconds for port 22
#   tags: always
#   hosts: all
#   become: true
#   gather_facts: false
#   pre_tasks:
#     - name: Pre-run | Wait 300 seconds for port 22
#       tags: always
#       ansible.builtin.wait_for:
#         port: 22
#         host: "{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}"
#         delay: 10
#       connection: local

- name: Pre-run | Updating packages
  tags: always
  hosts: all, !proxmox_servers
  become: true
  pre_tasks:
    - name: Pre-run | Update package cache (arch, manjaro)
      community.general.pacman:
        update_cache: yes
        upgrade: yes
      changed_when: false
      when: ansible_distribution == "Archlinux"

    - name: Pre-run | Update package cache (debian, etc)
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
        name: "*"
        state: latest
      when: ansible_distribution in ["Debian", "Ubuntu"]

    - name: Pre-run | Update package cache (fedora/rocky)
      ansible.builtin.dnf:
        update_only: yes
        name: "*"
        state: latest
      changed_when: false
      when: ansible_distribution in ["Fedora", "Rocky"]

- name: Pre-configuring hosts
  hosts: all
  become: true
  roles:
    - pre-configure

- name: Deploying Docker Application
  hosts: aws_ec2
  become: true
  roles:
    - role: deploy-docker-app
      tags: deploy-docker-app

- name: Post-run | Cleaning up hosts
  tags: always
  hosts: all
  become: true
  vars_files:
    - roles/pre-configure/vars/main.yml
  tasks:
    - name: Post-cleanup | Packages (arch)
      ansible.builtin.shell: |
        yes | pacman -Scc
      changed_when: false
      when: ansible_distribution == "Archlinux"

    - name: Post-cleanup | Packages' cache (debian and ubuntu)
      ansible.builtin.apt:
        autoclean: yes
      changed_when: false
      when: ansible_distribution in ["Debian", "Ubuntu"]

    - name: Post-cleanup | Autoremove orphan packages (debian and ubuntu)
      ansible.builtin.apt:
        autoremove: yes
        purge: yes
      when: ansible_distribution in ["Debian", "Ubuntu"]

    - name: Post-cleanup | Package's cache (fedora/rocky)
      ansible.builtin.dnf:
        autoremove: yes
      when: ansible_distribution in ["Fedora", "Rocky"]

    - name: Status | Get runtime
      ansible.builtin.set_fact:
        runtime: "{{ ((ansible_date_time.iso8601[:19] | to_datetime('%Y-%m-%dT%H:%M:%S')) - (start_time | to_datetime('%Y-%m-%dT%H:%M:%S'))) }}"

    - name: Telegram | Send completion alert
      ansible.builtin.import_tasks: roles/pre-configure/tasks/alerts/completion_alert.yml
      when:
        - task_failed is not defined

    - name: Telegram | Send failure alert
      ansible.builtin.import_tasks: roles/pre-configure/tasks/alerts/failure_alert.yml
      when:
        - task_failed is defined
        - task_failed == true
